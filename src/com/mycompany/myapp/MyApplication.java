package com.mycompany.myapp;


import static com.codename1.ui.CN.*;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import java.io.IOException;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.io.NetworkEvent;
import com.codename1.push.Push;
import com.codename1.push.PushCallback;
import com.mycompany.myapp.entities.User;
import com.mycompany.myapp.gui.SignInForm;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class MyApplication implements PushCallback {
    public static User currentUser= new User(2,"Zaki");

   private Form current;
    private Resources theme;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if (err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });
    }

    public void start() {

        if (current != null) {
            current.show();
            return;
        }
 
      
        
        
//        String s1 = sdf.format(cal);
//        String s2 = sdf.format(cal2);
//   
//        String res1 = s1.substring(0, s1.indexOf("-"));
//        String res2 = s2.substring(0, s2.indexOf("-"));
//        int nres1 = Integer.valueOf(res2);
//        int nres2 = Integer.valueOf(res1);
//
//        if (nres1 - nres2 < 3) {
//            System.out.println("Votre event est dans : " + (nres1 - nres2) + " jours");
//     }

        new SignInForm(theme).show();
    }

    public void stop() {
        current = getCurrentForm();
        if (current instanceof Dialog) {
            ((Dialog) current).dispose();
            current = getCurrentForm();
        }
    }

    public void destroy() {
        current = Display.getInstance().getCurrent();
        if (current instanceof Dialog) {
            ((Dialog) current).dispose();
            current = Display.getInstance().getCurrent();
        }
    }

    @Override
    public void push(String value) {
        System.out.println("Received push message: " + value);
    }

    @Override
    public void registeredForPush(String deviceId) {
        System.out.println("The Push ID for this device is " + Push.getPushKey());
    }

    @Override
    public void pushRegistrationError(String error, int errorCode) {
        System.out.println("An error occurred during push registration.");
    }


}
